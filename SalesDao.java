package dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import model.RevenueItem;

public class SalesDao {

    private List<RevenueItem> getDummyRevenueItems()
    {
        List<RevenueItem> items = new ArrayList<RevenueItem>();

		/*Sample data begins*/
        for (int i = 0; i < 10; i++) {
            RevenueItem item = new RevenueItem();
            item.setDate(new Date());
            item.setNumShares(5);
            item.setAccountId("foo");
            item.setPricePerShare(50.0);
            item.setStockSymbol("AAPL");
            item.setAmount(150.0);
            items.add(item);
        }
        /*Sample data ends*/

        return items;
    }
    public List<RevenueItem> getSalesReport(String month, String year) {

		/*
		 * The students code to fetch data from the database will be written here
		 * Query to get sales report for a particular month and year
		 */
    	List<RevenueItem> revenueItems = new ArrayList<RevenueItem>();
    	
    	// Select what we need from Transaction, Order and Trade for Revenue Items where the month and year are equal
    	String sql = "SELECT o.NumShares, tx.PricePerShare, tx.DateTime, tr.StockSymbol, tr.AccountID, tx.Fee "
    			+ "FROM `Transaction` AS tx "
    			+ "JOIN Trade AS tr ON tx.TransactionID = tr.TransactionID "
    			+ "JOIN Orders AS o ON  tr.OrderID = o.OrderID "
    			+ "WHERE MONTH(tx.DateTime) = ? AND YEAR(tx.DateTime) = ?";
    	
    	try (Connection conn = DatabaseConnection.getConnection();
    			PreparedStatement ps = conn.prepareStatement(sql)){
    		
    		ps.setString(1, month);
    		ps.setString(2, year);
    		
    		try (ResultSet rs = ps.executeQuery()) {
    			while (rs.next()) {
    				
    				// Create the revenue item for each row we get
    				RevenueItem item = new RevenueItem();
    				
    				item.setNumShares(rs.getInt("NumShares"));
    				item.setPricePerShare(rs.getDouble("PricePerShare"));
    				item.setDate(rs.getTimestamp("DateTime"));
    				item.setStockSymbol(rs.getString("StockSymbol"));
    				item.setAccountId(rs.getString("AccountID"));
    				item.setAmount(rs.getDouble("Fee"));
    				
    				revenueItems.add(item);
    			}
    		}
    				
		} catch (SQLException e) {
			e.printStackTrace();
		}
    	
        return revenueItems;
    }

    public static void main(String[] args) {
    	SalesDao s = new SalesDao();
    	System.out.println(s.getSalesReport("5", "2025").get(0).getNumShares());
    }


    public List<RevenueItem> getSummaryListing(String searchKeyword) {

		/*
		 * The students code to fetch data from the database will be written here
		 * Query to fetch details of summary listing of revenue generated by a particular stock,
		 * stock type or customer must be implemented
		 * Store the revenue generated by an item in the amount attribute
		 */

        return getDummyRevenueItems();
    }
}
